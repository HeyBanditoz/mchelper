/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    // Fat JARs for easier distribution to places
    id 'com.github.johnrengelman.shadow' version '5.0.0'

    // Distribute latest git information in jar
    id 'com.peterabeles.gversion' version '1.5.2'

    // Clean testing output
    id 'com.adarshr.test-logger' version '2.1.0'

    // Code coverage
    id 'jacoco'
    id 'de.jansauer.printcoverage' version '2.0.0'
}

shadowJar {
    minimize {
        exclude(dependency('org.cache2k:cache2k-core.*:.*'))
        exclude(dependency('ch.qos.logback:logback-classic.*:.*'))
        exclude(dependency('org.codehaus.groovy:groovy-jsr223.*:.*'))
    }
}

rootProject.tasks.named("shadowJar") {
    duplicatesStrategy = 'include'
}

gversion {
    srcDir = "src/main/java/"
    classPackage = "io.banditoz.mchelper"
    className = "Version"
    dateFormat = "yyyy-MM-dd HH:mm:ss"
    timeZone = "UTC"
    debug = false
    language = "java"
    explicitType = false
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://m2.dv8tion.net/releases'
        name 'm2-dv8tion'
    }
}

dependencies {
    implementation('net.dv8tion:JDA:4.3.0_331') {
        exclude module: 'opus-java'
    }
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.udojava:EvalEx:2.6'
    implementation 'org.scilab.forge:jlatexmath:1.0.7'
    implementation 'com.squareup.okhttp3:okhttp:3.13.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.1'
    implementation 'com.merakianalytics.orianna:orianna:4.0.0-rc5'
    implementation 'org.codehaus.groovy:groovy-jsr223:3.0.8'
    implementation 'io.github.tfriedrichs:dicebot:1.0.0'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.3'
    implementation 'org.cache2k:cache2k-api:1.2.3.Final' // downgrade for orianna
    implementation 'net.sourceforge.argparse4j:argparse4j:0.9.0'
    implementation('org.knowm.xchart:xchart:3.8.0') {
        ["graphics2d", "VectorGraphics2D", "animated-gif-lib"].each { module -> exclude module: module }
    }
    implementation 'org.reflections:reflections:0.9.12'
    runtimeOnly 'org.cache2k:cache2k-core:1.2.3.Final'
    runtimeOnly 'org.antlr:antlr4-runtime:4.9.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Define the main class for the application
mainClassName = 'io.banditoz.mchelper.Bot'
project.compileJava.dependsOn(createVersionFile)
