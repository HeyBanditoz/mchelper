/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    // Fat JARs for easier distribution to places
    id 'io.github.goooler.shadow' version '8.1.3'

    // Distribute latest git information in jar
    id 'com.peterabeles.gversion' version '1.10.2'

    // Clean testing output
    id 'com.adarshr.test-logger' version '4.0.0'

    // Code coverage
    id 'jacoco'
    id 'org.barfuin.gradle.jacocolog' version '3.1.0'

    // Database version control
    id 'org.liquibase.gradle' version '2.2.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

liquibase {
    def props = new Properties()
    def propsFile = file("liquibase.properties")
    if (propsFile.exists()) {
        propsFile.withInputStream {
            props.load(it)
        }
    }
    else {
        logger.warn("$propsFile.name doesn't exist. Reading from environment variables instead.")
        props.setProperty("url", "jdbc:postgresql://$System.env.HOST/$System.env.DB?currentSchema=$System.env.SCHEMA")
        props.setProperty("username", "$System.env.USER")
        props.setProperty("password", "$System.env.PASS")
    }
    activities {
        main {
            changelogfile "sql/postgres/master.yml"
            url props.getProperty("url")
            username props.getProperty("username")
            password props.getProperty("password")
        }
    }
}

shadowJar {
    minimize {
        exclude(dependency('org.cache2k:cache2k-core.*:.*'))
        exclude(dependency('ch.qos.logback:logback-classic.*:.*'))
        exclude(dependency('ch.obermuhlner:java-scriptengine.*:.*'))
        exclude(dependency('org.postgresql:postgresql.*:.*'))
        exclude(dependency('com.github.cgoIT:logback-elasticsearch-appender.*:.*'))
        exclude(dependency('org.liquibase:liquibase-core.*:.*'))
        exclude(dependency('io.avaje:.*:.*'))
    }
}

rootProject.tasks.named("shadowJar") {
    duplicatesStrategy = 'include'
}

gversion {
    srcDir = "src/main/java/"
    classPackage = "io.banditoz.mchelper"
    className = "Version"
    timeZone = "UTC"
    debug = false
    language = "java"
    explicitType = false
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    maven {
        url 'https://m2.dv8tion.net/releases'
        name 'm2-dv8tion'
    }
    maven {
        url 'https://jitpack.io'
        name 'jitpack'
    }
}

dependencies {
    implementation('net.dv8tion:JDA:6.0.0-rc.2') {
        exclude module: 'opus-java'
        exclude module: 'slf4j-api' // still need an old logback version for elasticsearch logger issue
        exclude module: 'tink'
    }
    implementation("org.slf4j:slf4j-api:1.7.36") {
        version {
            strictly "1.7.36" // we may never get out of dependency hell
        }
    }
    implementation 'ch.qos.logback:logback-classic:1.2.11' // pinned back to attempt to fix issues with missing fields in elasticsearch
    implementation 'com.udojava:EvalEx:2.7'
    implementation 'org.scilab.forge:jlatexmath:1.0.7'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.19.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.19.1'
    implementation 'com.google.guava:guava:33.2.0-jre'
    implementation 'io.github.tfriedrichs:dicebot:1.0.0'
    implementation 'org.postgresql:postgresql:42.7.7'
    implementation 'com.zaxxer:HikariCP:6.3.0'
    implementation 'io.jenetics:facilejdbc:2.1.0'
    implementation 'org.cache2k:cache2k-api:1.2.3.Final'
    implementation 'net.sourceforge.argparse4j:argparse4j:0.9.0'
    implementation('org.knowm.xchart:xchart:3.8.8') {
        ["graphics2d", "VectorGraphics2D", "animated-gif-lib"].each { module -> exclude module: module }
    }
    implementation 'me.xdrop:fuzzywuzzy:1.4.0'
    implementation 'ch.obermuhlner:java-scriptengine:2.0.0'
    implementation 'org.liquibase:liquibase-core:4.25.1'
    implementation 'com.mattbertolini:liquibase-slf4j:4.1.0'
    implementation 'org.yaml:snakeyaml:2.2'
    implementation 'com.github.minndevelopment:emoji-java:6.1.0'
    implementation 'com.github.cgoIT:logback-elasticsearch-appender:v1.12'
    implementation 'io.github.openfeign:feign-core:13.6'
    implementation 'io.github.openfeign:feign-jackson:13.6'
    implementation 'io.github.openfeign:feign-okhttp:13.6'
    implementation 'com.apptasticsoftware:rssreader:3.6.0'
    implementation 'org.slf4j:jul-to-slf4j:1.7.36' // above rssreader library calls upon JUL
    implementation 'io.avaje:avaje-config:4.1'

    implementation(platform('io.opentelemetry:opentelemetry-bom:1.51.0'))
    implementation 'io.opentelemetry:opentelemetry-api'
    implementation 'io.opentelemetry:opentelemetry-sdk'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-runtime-metrics:1.26.0-alpha'
    implementation 'io.opentelemetry:opentelemetry-exporter-prometheus:1.51.0-alpha'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-hikaricp-3.0:2.17.0-alpha'

    compileOnly 'io.avaje:avaje-record-builder:1.2'
    annotationProcessor 'io.avaje:avaje-record-builder:1.2'

    implementation 'io.avaje:avaje-inject:11.6'
    annotationProcessor('io.avaje:avaje-inject-generator:11.6')

    runtimeOnly 'org.cache2k:cache2k-core:1.2.3.Final'
    runtimeOnly 'org.antlr:antlr4-runtime:4.7.2' // holding out of date as the dice roller will throw warnings otherwise

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testAnnotationProcessor 'io.avaje:avaje-inject-test:11.6'
    testImplementation "org.testcontainers:testcontainers:1.21.3"
    testImplementation "org.testcontainers:junit-jupiter:1.21.3"

    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'io.avaje:avaje-inject-test:11.6'
    testAnnotationProcessor 'io.avaje:avaje-inject-generator:11.6'
    testImplementation 'com.tngtech.archunit:archunit:1.4.1'
    testImplementation 'org.reflections:reflections:0.10.2'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.17.2'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.2'
    liquibaseRuntime 'info.picocli:picocli:4.7.0'
    liquibaseRuntime 'org.yaml:snakeyaml:1.33'
    liquibaseRuntime 'org.postgresql:postgresql:42.7.5'
}

test {
    useJUnitPlatform()
    jvmArgs("--enable-preview")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs.add("--enable-preview")
}

// Define the main class for the application
mainClassName = 'io.banditoz.mchelper.Bot'
project.compileJava.dependsOn(createVersionFile)
